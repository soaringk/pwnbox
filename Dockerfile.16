FROM ubuntu:xenial

# install necessary packages
RUN export DEBIAN_FRONTEND=noninteractive \
    && dpkg --add-architecture i386 \
    && apt-get update && apt-get install --no-install-recommends -y \
    # building tools
    build-essential binutils coreutils cmake gcc gcc-multilib bison flex upx-ucl \
    autoconf automake libtool pax-utils \
    # debug
    gdb gdb-multiarch gdbserver glibc-source strace ltrace \
    libc6-dbg libc6-dbg:i386 libc6-dev libc6-dev:i386 \
    # python and related header
    python python-dev python-pip python-setuptools \
    python3 python3-dev python3-pip python3-setuptools \
    libssl-dev libffi-dev \
    ruby ruby-dev \
    # various tools
    wget curl netcat iproute2 zsh vim tmux git ack \
    #
    # untar glibc source code
    && cd /usr/src/glibc/ && tar xf glibc-2.23.tar.xz && rm -rf glibc-2.23.tar.xz \
    #
    # clean up
    && apt-get autoremove -y && apt-get clean -y \
    ; rm -rf ~/.cache \
    ; rm -rf /var/lib/apt/lists/* \
    ; rm -rf /tmp/* \
    ; rm -rf /var/tmp/*

# various tools for pwn
RUN python3 -m pip install -U --no-cache-dir pip \
    && python2 -m pip install -U --no-cache-dir pip \
    # pwndbg & gef
    && git clone https://github.com/pwndbg/pwndbg.git /usr/local/pwndbg \
    && cd /usr/local/pwndbg && ./setup.sh \
    && curl -fLo /usr/local/gef.py https://tinyurl.com/gef-master \
    && echo "# source /usr/local/gef.py" >> ~/.gdbinit \
    # split view of pwndbg
    && git clone https://github.com/jerdna-regeiz/splitmind /usr/local/splitmind \
    # pwntools, etc.
    && python3 -m pip install -U --no-cache-dir pwntools ropgadget \
    && python2 -m pip install -U --no-cache-dir pwntools ropgadget \
    && gem install one_gadget seccomp-tools \
    # other python panckages
    && python3 -m pip install -U --no-cache-dir pylint ipython yapf \
    && python2 -m pip install -U --no-cache-dir pylint ipython yapf \
    # patchelf
    && git clone https://github.com/NixOS/patchelf.git /usr/local/patchelf \
    && cd /usr/local/patchelf && ./bootstrap.sh && ./configure \
    && make && make install \
    # reversing tools
    && git clone https://github.com/radareorg/radare2.git /usr/local/radare2 \
    && cd /usr/local/radare2 && ./sys/install.sh \
    #
    # clean up
    && apt-get autoremove -y && apt-get clean -y \
    ; rm -rf ~/.cache \
    ; rm -rf /var/lib/apt/lists/* \
    ; rm -rf /tmp/* \
    ; rm -rf /var/tmp/*

# prezto
RUN git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto" \
    && chsh -s /bin/zsh
COPY .tmux.conf .p10k.zsh .gdbinit /root/
COPY zprezto/ /root/.zprezto/runcoms/
RUN ["/bin/zsh", "-c", "setopt EXTENDED_GLOB; for rcfile in ${ZDOTDIR:-$HOME}/.zprezto/runcoms/^README.md(.N); do ln -s $rcfile ${ZDOTDIR:-$HOME}/.${rcfile:t}; done"]


ENV LANG C.UTF-8
CMD ["zsh"]
